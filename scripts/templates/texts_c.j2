#include <translation/common.h>
#include <engine/easyFlashBanks.h>
#include <assets/assetsSettings.h>

//
//
// This file is auto-generated by 'create_translations.py' script.
//
//

#pragma data ( txt{{ lang | capitalize }}TxtData )

{% for section in text_arrays %}

//     "pragma_label": {{ section.pragma_label }},
//     "array_label": {{ section.array_label }},

{% for label in section.contents %}
//     "{{ lang }}": "{{ label.comment }}"
const char {{ label.prefix }}_{{ lang | upper }}_{{ label.name }}[] = {{ '{' }}{{ label.bytearray }}{{ ', 0x00};' }}
{%- endfor %}

{% endfor %}

{% for section in index_arrays %}

//     "pragma_label": {{ section.pragma_label }},
//     "array_label": {{ section.array_label }},

#pragma data ( txt{{ lang | capitalize }}{{ section.pragma_label }} )
{%- if lang == 'pl' %}
__export const char* {{ section.array_label }}[] = {
{%- else %}
__export const char* {{ section.array_label }}_{{ lang | upper }}[] = {
{% endif %}
    {%- for label in section.contents %}
    {{ label }}{{ "," if not loop.last }}
    {%- endfor %}
};
{% endfor %}

{%- if lang == 'pl' %}
// =============================================================================
// Copy code
// =============================================================================
#pragma code ( code )
#pragma data ( data )

void loadTranslation(){
    memcpy(TRANSLATION_DST, TRANSLATION_SRC, 0x1000);
}
{% endif -%}

// Switching code generation back to shared section
#pragma code ( code )
#pragma data ( data )

