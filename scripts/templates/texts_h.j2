#ifndef TEXTS_{{ lang | upper }}_H
#define TEXTS_{{ lang | upper }}_H

//
//
// This file is auto-generated by 'create_translations_yaml_jinja2.py' script.
//
//

{%- from 'memory_parameters.j2' import ns2 -%}
{%- set ns            = namespace() %}
{%- set ns.cart       = ns2.CARTRIDGE_ADDRESS_START %}
{%- set ns.static_txt = ns2.ram_static_txt %}
{%- set ns.ram        = ns2.ram_dynamic_txt %}

{% for section in text_arrays %}
//      "pragma_label":  {{ section.pragma_label }}
//      "array_label":   {{ section.array_label }}
//      "indexes_count": {{ section.indexes_count }}
//      "array_length":  {{ section.array_length }}

{#- 'array_start' 'array_end' 'data_start' 'data_end' are variables describeing data regions in cart #}
{%- set array_start = '{:#x}'.format( ns.cart ) %}
{%- set array_end   = '{:#x}'.format( ns.cart + ( section.indexes_count * 2 ) ) %}
{%- set data_start  = '{:#x}'.format( ns.cart + ( section.indexes_count * 2 ) ) %}
{%- set data_end    = '{:#x}'.format( ns.cart + ( section.indexes_count * 2 ) + section.array_length ) %}
{%- set ram_array   = '{:#x}'.format( ns.ram ) %}
{%- set ram_data    = '{:#x}'.format( ns.ram + ( section.indexes_count * 2 ) ) %}

{%- if section.pragma_label == 'Txt' %}
{%- set ram_array   = '{:#x}'.format( ns.static_txt ) %}
{%- set ram_data    = '{:#x}'.format( ns.static_txt + ( section.indexes_count * 2 ) ) %}
{%- endif %}

{%- set ns.cart      = ns.cart + section.array_length + ( section.indexes_count * 2 ) + 1 %}

#pragma section( {{ lang | lower }}{{ section.pragma_label }}, 0 )
#pragma section( {{ lang | lower }}{{ section.pragma_label }}Data, 0 )
#pragma region( bank{{ lang | capitalize }}{{ section.pragma_label }}Array, {{ array_start }}, {{ array_end }}, , TRANSLATION_{{ lang | upper }}_BANK, { {{ lang | lower }}{{ section.pragma_label }}}, {{ ram_array }} )
#pragma region( bank{{ lang | capitalize }}{{ section.pragma_label }}Data, {{ data_start }}, {{ data_end }}, , TRANSLATION_{{ lang | upper }}_BANK, { {{ lang | lower }}{{ section.pragma_label }}Data}, {{ ram_data }} )
{% endfor %}

{% if lang == 'pl' -%}
// Switching code generation back to shared section
#pragma code ( code )
#pragma data ( data )

void loadTranslation();
{%- endif %}

#pragma compile("texts{{ lang | upper }}.c")
#endif
