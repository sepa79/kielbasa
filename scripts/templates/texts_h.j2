#ifndef TEXTS_{{ lang | upper }}_H
#define TEXTS_{{ lang | upper }}_H

//
//
// This file is auto-generated by 'create_translations.py' script.
//
//

// Sections and regions
#pragma section( txt{{ lang | capitalize }}PlantTypes, 0 )
#pragma section( txt{{ lang | capitalize }}FieldSizes, 0 )
//#pragma section( txt{{ lang | capitalize }}PlantStateNames, 0 )
#pragma section( txt{{ lang | capitalize }}PlantStageNames, 0 )
#pragma section( txt{{ lang | capitalize }}LocationNames, 0 )
#pragma section( txt{{ lang | capitalize }}MainArray, 0 )
#pragma section( txt{{ lang | capitalize }}TxtData, 0 )
#pragma region( bankTxt{{ lang | capitalize }}1, 0x8000, 0x8100, ,TRANSLATION_{{ lang | upper }}_BANK, {
    txt{{ lang | capitalize }}PlantTypes,
    txt{{ lang | capitalize }}FieldSizes,
//    txt{{ lang | capitalize }}PlantStateNames,
    txt{{ lang | capitalize }}PlantStageNames,
    txt{{ lang | capitalize }}LocationNames
}, 0x6000 )

#pragma region( bankTxt{{ lang | capitalize }}Array, 0x8100, 0x8200, , TRANSLATION_{{ lang | upper }}_BANK, { txt{{ lang | capitalize }}MainArray }, 0x6100 )
#pragma region( bankTxt{{ lang | capitalize }}Data, 0x8200, 0x8fff, , TRANSLATION_{{ lang | upper }}_BANK, { txt{{ lang | capitalize }}TxtData }, 0x6200 )

{% if lang == 'pl' -%}
#pragma code ( code )
#pragma data ( data )

void loadTranslation();

// Switching code generation back to shared section
#pragma code ( code )
#pragma data ( data )
{% endif %}

#pragma compile("texts{{ lang | upper }}.c")
#endif
