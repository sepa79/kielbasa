#ifndef TEXTS_PL_H
#define TEXTS_PL_H

//
//
// This file is auto-generated by 'create_translations_yaml_jinja2.py' script.
//
//

// Sections and regions
#pragma section( txtPlPlantTypes, 0 )
#pragma section( txtPlFieldSizes, 0 )
#pragma section( txtPlPlantStageNames, 0 )
#pragma section( txtPlLocationNames, 0 )
#pragma region( bankTxtPl1, 0x8000, 0x8100, ,TRANSLATION_PL_BANK, {
    txtPlPlantTypes,
    txtPlFieldSizes,
    txtPlPlantStageNames,
    txtPlLocationNames
}, 0x5c00 )

//      "pragma_label":  MainArray
//      "array_label":   TXT
//      "indexes_count": 125
//      "array_length":  2651

// #pragma section( txtPlMainArrayArray, 0 )
// #pragma section( txtPlMainArrayData, 0 )
// #pragma region( bankTxtPlArray, 0x8000, 0x80fa, , TRANSLATION_PL_BANK, { txtPlMainArrayArray}, 0x6800 )
// #pragma region( bankTxtPlData, 0x80fa, 0x8b55, , TRANSLATION_PL_BANK, { txtPlMainArrayArray}, 0x68fa )

//      "pragma_label":  FieldSizes
//      "array_label":   FIELD_SIZES
//      "indexes_count": 4
//      "array_length":  32

// #pragma section( txtPlFieldSizesArray, 0 )
// #pragma section( txtPlFieldSizesData, 0 )
// #pragma region( bankTxtPlArray, 0x8b56, 0x8b5e, , TRANSLATION_PL_BANK, { txtPlFieldSizesArray}, 0x6800 )
// #pragma region( bankTxtPlData, 0x8b5e, 0x8b7e, , TRANSLATION_PL_BANK, { txtPlFieldSizesArray}, 0x6808 )

//      "pragma_label":  LocationNames
//      "array_label":   LOCATION_NAMES
//      "indexes_count": 22
//      "array_length":  550

// #pragma section( txtPlLocationNamesArray, 0 )
// #pragma section( txtPlLocationNamesData, 0 )
// #pragma region( bankTxtPlArray, 0x8b7f, 0x8bab, , TRANSLATION_PL_BANK, { txtPlLocationNamesArray}, 0x6800 )
// #pragma region( bankTxtPlData, 0x8bab, 0x8dd1, , TRANSLATION_PL_BANK, { txtPlLocationNamesArray}, 0x682c )

//      "pragma_label":  PlantStageNames
//      "array_label":   PLANT_STAGE_NAMES
//      "indexes_count": 9
//      "array_length":  81

// #pragma section( txtPlPlantStageNamesArray, 0 )
// #pragma section( txtPlPlantStageNamesData, 0 )
// #pragma region( bankTxtPlArray, 0x8dd2, 0x8de4, , TRANSLATION_PL_BANK, { txtPlPlantStageNamesArray}, 0x6800 )
// #pragma region( bankTxtPlData, 0x8de4, 0x8e35, , TRANSLATION_PL_BANK, { txtPlPlantStageNamesArray}, 0x6812 )

//      "pragma_label":  PlantTypes
//      "array_label":   PLANT_TYPES_TXT
//      "indexes_count": 5
//      "array_length":  55

// #pragma section( txtPlPlantTypesArray, 0 )
// #pragma section( txtPlPlantTypesData, 0 )
// #pragma region( bankTxtPlArray, 0x8e36, 0x8e40, , TRANSLATION_PL_BANK, { txtPlPlantTypesArray}, 0x6800 )
// #pragma region( bankTxtPlData, 0x8e40, 0x8e77, , TRANSLATION_PL_BANK, { txtPlPlantTypesArray}, 0x680a )

// array_start, array_length, data_start, data_length

// enum
// {
//     CART_ARRAY_START,
//     CART_ARRAY_LENGTH,
//     CART_DATA_START,
//     CART_DATA_LENGTH
// };

// 0x8000, 0x00fa, 0x80fa, 0x0b55
// 0x8b56, 0x0008, 0x8b5e, 0x0028
// 0x8b7f, 0x002c, 0x8bab, 0x0252
// 0x8dd2, 0x0012, 0x8de4, 0x0063
// 0x8e36, 0x000a, 0x8e40, 0x0041

#pragma section( txtPlMainArray, 0 )
#pragma section( txtPlTxtData, 0 )
#pragma region( bankTxtPlArray, 0x8100, 0x8200, , TRANSLATION_PL_BANK, { txtPlMainArray }, 0x5d00 )
#pragma region( bankTxtPlData, 0x8200, 0x91ff, , TRANSLATION_PL_BANK, { txtPlTxtData }, 0x5e00 )

// Switching code generation back to shared section
#pragma code ( code )
#pragma data ( data )

void loadTranslation();

#pragma compile("textsPL.c")
#endif