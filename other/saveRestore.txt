
volatile byte sOldPosX[7];
volatile byte sOldPosY[7];
volatile byte sOldPtr[7];
volatile byte sOldColor[7];

volatile byte sOldXSMB;
volatile byte sOldenable;
volatile byte sOldExpandX;
volatile byte sOldExpandY;
volatile byte sOldPriority;

volatile byte rasterPos1 = 80;
volatile byte rasterPos2 = 190;
const byte SPRITE_BAR_HEIGHT = 9;
const byte SAVE_OVERHEAD = 10;

void saveSpriteSettings(char * screenAddress)
{
    volatile char* sprites_ptr = screenAddress+OFFSET_SPRITE_PTRS;

    // remember old values
    sOldXSMB = SPRITES_XMSB[0];
    sOldenable = VICII->SPRITES_ENABLE;
    sOldExpandX = VICII->SPRITES_EXPAND_X;
    sOldExpandY = VICII->SPRITES_EXPAND_Y;
    sOldPriority = VICII->SPRITES_PRIORITY;

    sOldPosX[0] = SPRITES_XPOS[0*2];
    sOldPosY[0] = SPRITES_YPOS[0*2];
    sOldPosX[1] = SPRITES_XPOS[1*2];
    sOldPosY[1] = SPRITES_YPOS[1*2];
    sOldPosX[2] = SPRITES_XPOS[2*2];
    sOldPosY[2] = SPRITES_YPOS[2*2];
    sOldPosX[3] = SPRITES_XPOS[3*2];
    sOldPosY[3] = SPRITES_YPOS[3*2];
    sOldPosX[4] = SPRITES_XPOS[4*2];
    sOldPosY[4] = SPRITES_YPOS[4*2];
    sOldPosX[5] = SPRITES_XPOS[5*2];
    sOldPosY[5] = SPRITES_YPOS[5*2];
    sOldPosX[6] = SPRITES_XPOS[6*2];
    sOldPosY[6] = SPRITES_YPOS[6*2];
    
    sOldColor[0] = SPRITES_COLOR[0];
    sOldColor[1] = SPRITES_COLOR[1];
    sOldColor[2] = SPRITES_COLOR[2];
    sOldColor[3] = SPRITES_COLOR[3];
    sOldColor[4] = SPRITES_COLOR[4];
    sOldColor[5] = SPRITES_COLOR[5];
    sOldColor[6] = SPRITES_COLOR[6];

    sOldPtr[0] = sprites_ptr[0];
    sOldPtr[1] = sprites_ptr[1];
    sOldPtr[2] = sprites_ptr[2];
    sOldPtr[3] = sprites_ptr[3];
    sOldPtr[4] = sprites_ptr[4];
    sOldPtr[5] = sprites_ptr[5];
    sOldPtr[6] = sprites_ptr[6];
}

void restoreSpriteSettings(char * screenAddress)
{
    // copy sprite values back
    volatile char* sprites_ptr = screenAddress+OFFSET_SPRITE_PTRS;

    SPRITES_XMSB[0] = sOldXSMB;

    SPRITES_XPOS[0*2] = sOldPosX[0];
    SPRITES_YPOS[0*2] = sOldPosY[0];
    SPRITES_XPOS[1*2] = sOldPosX[1];
    SPRITES_YPOS[1*2] = sOldPosY[1];
    SPRITES_XPOS[2*2] = sOldPosX[2];
    SPRITES_YPOS[2*2] = sOldPosY[2];
    SPRITES_XPOS[3*2] = sOldPosX[3];
    SPRITES_YPOS[3*2] = sOldPosY[3];
    SPRITES_XPOS[4*2] = sOldPosX[4];
    SPRITES_YPOS[4*2] = sOldPosY[4];
    SPRITES_XPOS[5*2] = sOldPosX[5];
    SPRITES_YPOS[5*2] = sOldPosY[5];
    SPRITES_XPOS[6*2] = sOldPosX[6];
    SPRITES_YPOS[6*2] = sOldPosY[6];
    
    SPRITES_COLOR[0] = sOldColor[0];
    SPRITES_COLOR[1] = sOldColor[1];
    SPRITES_COLOR[2] = sOldColor[2];
    SPRITES_COLOR[3] = sOldColor[3];
    SPRITES_COLOR[4] = sOldColor[4];
    SPRITES_COLOR[5] = sOldColor[5];
    SPRITES_COLOR[6] = sOldColor[6];

    sprites_ptr[0] = sOldPtr[0];
    sprites_ptr[1] = sOldPtr[1];
    sprites_ptr[2] = sOldPtr[2];
    sprites_ptr[3] = sOldPtr[3];
    sprites_ptr[4] = sOldPtr[4];
    sprites_ptr[5] = sOldPtr[5];
    sprites_ptr[6] = sOldPtr[6];

    VICII->SPRITES_EXPAND_X = sOldExpandX;
    VICII->SPRITES_EXPAND_Y = sOldExpandY;
    VICII->SPRITES_PRIORITY = sOldPriority;

    VICII->SPRITES_ENABLE = sOldenable;
}